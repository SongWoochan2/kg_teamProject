

-------------------------------------------------------------  (1)
--질문,답 테이블 생성
create table qna(
  qna_code int,
  qna_type varchar(100) not null,
  qna_title varchar(255) not null,
  qna_content varchar(2048) not null,
  qna_date date default sysdate,
  primary key(qna_code)
);

--qna시퀀스 생성
create sequence qna_code_seq nocycle nocache;

-------------------------------------------------



--관리자 테이블
create table admin(
  admin_id varchar2(30) not null,
  admin_name varchar2(30) not null,
  admin_pwd varchar2(25) not null,
  enroll_date date,
  primary key(admin_id)
);

--관리장계정 등록
insert into admin values(
   'cgv1', '강남cgv관리자', '1234', sysdate
);

-------------------------------------------------
--극장 테이블
create table theater(
  theater_code int,
  theater_name varchar2(30) not null,
  theater_photo_addr varchar2(255) not null,
  theater_phone varchar(11) not null,
  primary key(theater_code)
);

create sequence theater_seq nocache nocycle;

--관리장계정 등록
insert into theater values(
  theater_seq.nextval, '강남cgv', 'CGVgangnam.jpg', '01050439803'
);
insert into theater values(
  theater_seq.nextval, '서초cgv', 'CGVgangbyeon.jpg', '01050439803'
);
insert into theater values(
  theater_seq.nextval, '종로cgv', 'CGVmyeongdong.jpg', '01050439803'
);

----------------------------------------------------

-- 시간분류
create table time_type(
	time_type_code int primary key,
	add_cost number not null,
	time_type_name varchar(30)
);

insert into time_type values ( 5, -3000, '조조영화' );
insert into time_type values ( 6, -3000, '조조영화' );
insert into time_type values ( 7, -3000, '조조영화' );
insert into time_type values ( 8, -3000, '조조영화' );
insert into time_type values ( 9, 0, '일반영화' );
insert into time_type values ( 10, 0, '일반영화' );
insert into time_type values ( 11, 0, '일반영화' );
insert into time_type values ( 12, 0, '일반영화' );
insert into time_type values ( 13, 0, '일반영화' );
insert into time_type values ( 14, 0, '일반영화' );
insert into time_type values ( 15, 0, '일반영화' );
insert into time_type values ( 16, 0, '일반영화' );
insert into time_type values ( 17, 0, '일반영화' );
insert into time_type values ( 18, 0, '일반영화' );
insert into time_type values ( 19, 0, '일반영화' );
insert into time_type values ( 20, 0, '일반영화' );
insert into time_type values ( 21, 0, '일반영화' );
insert into time_type values ( 22, 0, '일반영화' );
insert into time_type values ( 23, 0, '일반영화' );
insert into time_type values ( 24, -2000, '심야영화' );
insert into time_type values ( 25, -2000, '심야영화' );
insert into time_type values ( 26, -2000, '심야영화' );
insert into time_type values ( 27, -2000, '심야영화' );


-----------------------------------------------------

--좌석분류표
create table seat_type(
  seat_type_code int primary key,
  add_cost number,
  seat_type_name varchar(15)
);

insert into seat_type values(
  0, 0, '빈좌석'
);
insert into seat_type values(
  1, -1000, '장애인석'
);
insert into seat_type values(
  2, 0, '일반석'
);
insert into seat_type values(
  3, 1000, '우등석'
);
insert into seat_type values(
  4, 1000, '커플석'
);

----------------------------------------------

-- 영화 테이블
create table movie(
  movie_code int,
  movie_name varchar(30) not null,
  movie_content varchar(2048) not null,
  make_nation varchar(15) not null,
  movie_open_date date not null,
  movie_recycle_time number not null,
  movie_show_grade_name varchar(30) not null,
  movie_type1 varchar(15) not null,
  movie_type2 varchar(15),
  movie_type3 varchar(15),
  movie_director varchar(30) not null,
  movie_evaluat_num number not null,
  acc_evaluat_score number not null,
  appear_actor varchar(2048) not null,
  good_num number not null,
  acc_audience_num number not null,
  primary key(movie_code)
);

create sequence movie_seq
start with 1
increment by 1
nocache
nomaxvalue;

insert into movie values(
  movie_seq.nextval, '팔씨름', '줄거리', '한국', sysdate, 186, '청소년 이용불가', '코미디', '', '', '송우찬',
  10, 13, '진환,빛나,성웅,재민,빛나,재환', 5, 700000);
insert into movie values(
  movie_seq.nextval, '씨름', '줄거리', '한국', sysdate, 186, '청소년 이용불가', '액션', '', '', '김진환',
  10, 13, '진환,빛나,성웅,재민,빛나,재환', 5, 700000);
insert into movie values(
  movie_seq.nextval, '장농', '줄거리', '한국', sysdate, 186, '12세 이용가', '액션', '', '', '성웅',
  10, 13, '진환,빛나,성웅,재민,빛나,재환', 5, 700000);
insert into movie values(
  movie_seq.nextval, '팔씨름', '줄거리', '한국', sysdate, 186, '12세 이용가', '코미디', '', '', '송우찬',
  10, 13, '진환,빛나,성웅,재민,빛나,재환', 5, 700000);
insert into movie values(
  movie_seq.nextval, '팔씨름', '줄거리', '한국', sysdate, 186, '15세 이용가', '코미디', '', '', '빛나',
  10, 13, '진환,빛나,성웅,재민,빛나,재환', 5, 700000);
insert into movie values(
  movie_seq.nextval, '마우스', '줄거리', '한국', sysdate, 186, '15세 이용가', 'SF', '', '', '송우찬',
  10, 13, '진환,빛나,성웅,재민,빛나,재환', 5, 700000);
insert into movie values(
  movie_seq.nextval, '기계식키보드', '줄거리', '한국', sysdate, 186, '청소년 이용불가', '코미디', '', '', '재환',
  10, 13, '진환,빛나,성웅,재민,빛나,재환', 5, 700000);
insert into movie values(
  movie_seq.nextval, '모니터', '줄거리', '한국', sysdate, 186, '15세 이용가', '코미디', '', '', '송우찬',
  10, 13, '진환,빛나,성웅,재민,빛나,재환', 5, 700000);
insert into movie values(
  movie_seq.nextval, '노트북', '줄거리', '한국', sysdate, 186, '15세 이용가', '코미디', '', '', '진환',
  10, 13, '진환,빛나,성웅,재민,빛나,재환', 5, 700000);
insert into movie values(
  movie_seq.nextval, '큐엘이디 모니터', '줄거리', '한국', sysdate, 186, '청소년 이용불가', '코미디', '', '', '빛나',
  10, 13, '진환,빛나,성웅,재민,빛나,재환', 5, 700000);
insert into movie values(
  movie_seq.nextval, '나혼자 한다', '줄거리', '한국', sysdate, 186, '12세 이용가', '판타지', '', '', '재민',
  10, 13, '진환,빛나,성웅,재민,빛나,재환', 5, 700000);
insert into movie values(
  movie_seq.nextval, '너와내가 연결고리', '줄거리', '한국', sysdate, 186, '12세 이용가', 'SF', '', '', '빛나',
  10, 13, '진환,빛나,성웅,재민,빛나,재환', 5, 700000);
insert into movie values(
  movie_seq.nextval, '도랏맨', '줄거리', '한국', sysdate, 186, '청소년 이용불가', '액션', '', '', '송우찬',
  10, 13, '진환,빛나,성웅,재민,빛나,재환', 5, 700000);


------------------------------------------------

-- 관리자 신청
create table admin_request(
  admin_request_code int,
  admin_id varchar2(30) not null UNIQUE,
  admin_name varchar2(30) not null,
  admin_pwd varchar2(25) not null,
  request_date date not null,
  primary key(admin_request_code)
);

create sequence admin_request_seq
start with 1
increment by 1
nocache
nomaxvalue;

-----------------------------------------------
-- 회원 테이블
create table member(
  member_id varchar(30),     
  member_name varchar(30) not null,
  nick_name varchar(30),
  member_pwd varchar(20) not null,
  member_birth date not null,
  member_email varchar(50) not null,
  member_agency varchar(10) not null,
  member_phone varchar(11) not null,
  saving_point int,
  join_date date,
  member_grade char(1),
  member_gender varchar(10) not null,
  profile_img_addr varchar(255),
  primary key(member_id)
);

insert into member values(
  'aaa','하하하',null,'1234',to_date('2010-12-15','YYYY-MM-DD'),
  'aaa@naver.com','KT','01012345678',1000,sysdate,'C','여자','none.png'
);
insert into member values(
  'bbb','호호호호',null,'1234',to_date('2000-1-20','YYYY-MM-DD'),
  'bbb@naver.com','SKT','01011112222',1000,sysdate,'B','남자','none.png'
);
insert into member values(
  'ccc','히히히',null,'1234',to_date('1990-05-01','YYYY-MM-DD'),
  'ccc@naver.com','LGU+','01033335555',1000,sysdate,'A','남자','none.png'
);
insert into member values(
  'ddd','흐흐흐',null,'1234',to_date('1997-7-30','YYYY-MM-DD'),
  'ddd@naver.com','알뜰폰','01077779999',1000,sysdate,'C','여자','none.png'
);



-- 비회원 테이블
create table nonmember(
  nonmember_code int,
  nonmember_name varchar(30) not null,
  nonmember_birth date not null,
  nonmember_pwd varchar(20) not null,
  nonmember_phone varchar(11) not null,
  nonmember_enroll_date date,
  primary key(nonmember_code)
);

create sequence nonmember_seq
start with 1
increment by 1
nocache
nomaxvalue;




-----------------------------------------------
-- 상품 테이블
create table product(
	product_code number not null,	--상품코드 (pk)
	product_name varchar2(30) not null,	--상품명
	product_cost number not null,	--상품가격
	product_type varchar2(15) not null,	--상품분류
	product_photo_addr varchar2(255), 	--상품분류주소
	primary key(product_code)
);


-- product 테이블 시퀸스
create sequence product_seq
start with 1
increment by 1
nocache
nomaxvalue;

-- 상품 등록
insert into product values (
	product_seq.nextval,'CGV콤보',10000,'set','CGV콤보.jpg'
);
insert into product values (
	product_seq.nextval,'GOURMET더블콤보',12000,'set','GOURMET더블콤보.jpg'
);
insert into product values (
	product_seq.nextval,'GOURMET콤보',11000,'set','GOURMET콤보.jpg'
);
insert into product values (
	product_seq.nextval,'더블콤보',11500,'set','더블콤보.png'
);
insert into product values (
	product_seq.nextval,'라지콤보',14000,'set','라지콤보.png'
);

insert into product values (
	product_seq.nextval,'더블치즈팝콘(L)',7000,'popcorn','더블치즈팝콘(L).jpg'
);
insert into product values (
	product_seq.nextval,'바질어니언팝콘(L)',7000,'popcorn','바질어니언팝콘(L).jpg'
);
insert into product values (
	product_seq.nextval,'고소팝콘(L)',7000,'popcorn','고소팝콘(L).jpg'
);
insert into product values (
	product_seq.nextval,'고소팝콘(M)',5000,'popcorn','고소팝콘(M).jpg'
);
insert into product values (
	product_seq.nextval,'달콤팝콘(L)',7000,'popcorn','달콤팝콘(L).jpg'
);
insert into product values (
	product_seq.nextval,'달콤팝콘(M)',5000,'popcorn','달콤팝콘(M).jpg'
);
insert into product values (
	product_seq.nextval,'더블초콜렛 팝콘(L)',6000,'popcorn','더블초콜렛 팝콘(L).jpg'
);
insert into product values (
	product_seq.nextval,'더블초콜렛 팝콘(M)',4500,'popcorn','더블초콜렛 팝콘(M).jpg'
);
insert into product values (
	product_seq.nextval,'리얼치즈 팝콘(L)',6000,'popcorn','리얼치즈 팝콘(L).jpg'
);
insert into product values (
	product_seq.nextval,'리얼치즈 팝콘(M)',4500,'popcorn','리얼치즈 팝콘(M).jpg'
);
insert into product values (
	product_seq.nextval,'스위트랜치(L)',6000,'popcorn','스위트랜치(L).jpg'
);
insert into product values (
	product_seq.nextval,'스위트랜치(M)',4500,'popcorn','스위트랜치(M).jpg'
);
insert into product values (
	product_seq.nextval,'카라멜&치즈팝콘(L)',6000,'popcorn','카라멜&치즈팝콘(L).jpg'
);
insert into product values (
	product_seq.nextval,'카라멜&치즈팝콘(M)',4500,'popcorn','카라멜&치즈팝콘(M).jpg'
);
insert into product values (
	product_seq.nextval,'크리미카라멜팝콘(L)',6000,'popcorn','크리미카라멜팝콘(L).jpg'
);
insert into product values (
	product_seq.nextval,'크리미카라멜팝콘(M)',4500,'popcorn','크리미카라멜팝콘(M).jpg'
);

insert into product values (
	product_seq.nextval,'콜라(L)',3500,'beverage','콜라(L).jpg'
);
insert into product values (
	product_seq.nextval,'콜라(M)',2000,'beverage','콜라(M).jpg'
);
insert into product values (
	product_seq.nextval,'콜라제로(L)',3500,'beverage','콜라제로(L).jpg'
);
insert into product values (
	product_seq.nextval,'콜라제로(M)',2000,'beverage','콜라제로(M).jpg'
);
insert into product values (
	product_seq.nextval,'스프라이트(L)',3500,'beverage','스프라이트(L).jpg'
);
insert into product values (
	product_seq.nextval,'스프라이트(M)',2000,'beverage','스프라이트(M).jpg'
);
insert into product values (
	product_seq.nextval,'오렌지환타(L)',3500,'beverage','오렌지환타(L).jpg'
);
insert into product values (
	product_seq.nextval,'오렌지환타(M)',2000,'beverage','오렌지환타(M).jpg'
);
insert into product values (
	product_seq.nextval,'포도환타(L)',3500,'beverage','포도환타(L).jpg'
);
insert into product values (
	product_seq.nextval,'포도환타(M)',2000,'beverage','포도환타(M).jpg'
);
insert into product values (
	product_seq.nextval,'블루베리에이드(L)',4500,'beverage','블루베리에이드(L).jpg'
);
insert into product values (
	product_seq.nextval,'블루베리에이드(L)',4500,'beverage','오렌지에이드(L).jpg'
);
insert into product values (
	product_seq.nextval,'블루베리에이드(L)',4500,'beverage','자몽에이드(L).jpg'
);

insert into product values (
	product_seq.nextval,'맛밤',3000,'snack','맛밤.jpg'
);
insert into product values (
	product_seq.nextval,'오징어(완제품)',3500,'snack','오징어(완제품).jpg'
);
insert into product values (
	product_seq.nextval,'즉석구이오징어(몸통)',4500,'snack','즉석구이오징어(몸통).jpg'
);
insert into product values (
	product_seq.nextval,'칠리치즈나쵸',4000,'snack','칠리치즈나쵸.jpg'
);
insert into product values (
	product_seq.nextval,'크리미갈릭핫도그',4500,'snack','크리미갈릭핫도그.jpg'
);



-----------------------------------------------
-------------------------------------------------------------  (2)

--찜하기 테이블 생성
create table select_do(
  select_code int,
  member_id varchar(30),
  movie_code int,
  constraint select_do_movie_code_fk foreign key(movie_code) references movie(movie_code),
  constraint select_do_member_id_fk foreign key(member_id) references member(member_id),
  primary key(select_code)
);

--찜하기 시퀀스 생성
create sequence select_do_seq
start with 1
increment by 1
nocache
nomaxvalue;

--평가 테이블 생성
create table evaluat(
  evaluat_code int,
  movie_code int,
  evaluat_id varchar(30),
  evaluat_score number,
  evaluat_content varchar(2048),
  evaluat_like_num number,
  evaluat_date date,
  constraint evaluat_movie_code_fk foreign key(movie_code) references movie(movie_code),
  constraint evaluat_member_id_fk foreign key(evaluat_id) references member(member_id),
  primary key(evaluat_code)
);

--평가 시퀀스 생성
create sequence evaluat_seq
start with 1
increment by 1
nocache
nomaxvalue;



--공지사항 테이블 생성
create table notice_item(
  notice_item_code int,
  admin_id varchar(30),
  notice_item_type varchar(100) not null,
  notice_item_title varchar(255) not null,
  notice_item_content varchar(2048) not null,
  notice_item_date date default sysdate,
  CONSTRAINT fk_notice_item FOREIGN KEY (admin_id) REFERENCES admin(admin_id),
  primary key(notice_item_code)
);

--noticeitem시퀀스 생성
create sequence notice_item_code_seq nocycle nocache;

-------------------------------------------------

--문의 테이블 생성
create table inquiry(
  inquiry_code number,
  inquiry_id varchar2(30),
  inquiry_type varchar2(100),
  inquiry_title varchar2(255) not null,
  inquiry_content varchar2(2048) not null,
  inquiry_file varchar2(250),
  inquiry_status number default 0,
  inquiry_date date,
  FOREIGN KEY (inquiry_id) REFERENCES member(member_id),
  primary key(inquiry_code)
);

--시퀀스 생성
create sequence inquiry_code_seq nocycle nocache;

-------------------------------------------------

--상영관 테이블
create table show_place(
  show_place_code int primary key,
  theater_code int not null,
  show_place_name varchar(30) not null,
  default_cost number not null,
  show_place_photo_addr varchar(255),
  FOREIGN KEY (theater_code) REFERENCES theater(theater_code)
);

create sequence show_place_seq nocache nocycle;

--관리장계정 등록
insert into show_place values(
  show_place_seq.nextval, '1', '1상영관', 10000, '1.jpg'
);
insert into show_place values(
  show_place_seq.nextval, '1', '2상영관', 12000, '2.jpg'
);
insert into show_place values(
  show_place_seq.nextval, '1', '3상영관', 11000, '3.jpg'
);
insert into show_place values(
  show_place_seq.nextval, '2', '1상영관', 11000, '4.jpg'
);
insert into show_place values(
  show_place_seq.nextval, '2', '2상영관', 10000, '5.jpg'
);
insert into show_place values(
  show_place_seq.nextval, '3', '1상영관', 11000, '6.jpg'
);

--------------------------------------

-- 적립목록 테이블
create table saving_list(
  saving_code int,
  saving_id varchar(30) not null,
  FOREIGN KEY (saving_id) REFERENCES member(member_id),
  saving_name varchar(30) not null,
  pay_cost number not null,
  saving_cost number not null,
  saving_date date not null,
  primary key(saving_code)
);

create sequence saving_list_seq
start with 1
increment by 1
nocache
nomaxvalue;

insert into saving_list values(
  saving_list_seq.nextval, 'aaa', '@@@@@@@', 8000, 40, '2018.04.05');

insert into saving_list values(
  saving_list_seq.nextval, 'ccc', '///////', 8000, 40, '2018.04.05');

------------------------------------------------------

-- 영화 트레일러
create table movie_trailer(
  movie_trailer_code int,
  movie_code int,
  movie_trailer_name varchar(30) not null,
  movie_trailer_addr varchar(255) not null,
  upload_date date not null,
  constraint movietrailer_movie_code_fk foreign key(movie_code) references movie(movie_code),
  primary key(movie_trailer_code)
);

create sequence movie_trailer_seq
start with 1
increment by 1
nocache
nomaxvalue;

----------------------------------------------

-- 영화 사진
create table movie_photo(
  movie_photo_code int,
  movie_code int,
  movie_photo_name varchar(30) not null,
  movie_photo_addr varchar(255) not null,
  upload_date date not null,
  constraint moviephoto_movie_code_fk foreign key(movie_code) references movie(movie_code),
  primary key(movie_photo_code)
);

create sequence movie_photo_seq
start with 1
increment by 1
nocache
nomaxvalue;


insert into movie_photo values ( movie_photo_seq.nextval, 1, '영화 포스터', 'poster_movie_1.jpg', sysdate );
insert into movie_photo values ( movie_photo_seq.nextval, 2, '영화 포스터', 'poster_movie_1.jpg', sysdate );
insert into movie_photo values ( movie_photo_seq.nextval, 3, '영화 포스터', 'poster_movie_1.jpg', sysdate );
insert into movie_photo values ( movie_photo_seq.nextval, 4, '영화 포스터', 'poster_movie_1.jpg', sysdate );
insert into movie_photo values ( movie_photo_seq.nextval, 5, '영화 포스터', 'poster_movie_1.jpg', sysdate );
insert into movie_photo values ( movie_photo_seq.nextval, 6, '영화 포스터', 'poster_movie_1.jpg', sysdate );
insert into movie_photo values ( movie_photo_seq.nextval, 7, '영화 포스터', 'poster_movie_1.jpg', sysdate );
insert into movie_photo values ( movie_photo_seq.nextval, 8, '영화 포스터', 'poster_movie_1.jpg', sysdate );
insert into movie_photo values ( movie_photo_seq.nextval, 9, '영화 포스터', 'poster_movie_1.jpg', sysdate );
insert into movie_photo values ( movie_photo_seq.nextval, 10, '영화 포스터', 'poster_movie_1.jpg', sysdate );
insert into movie_photo values ( movie_photo_seq.nextval, 11, '영화 포스터', 'poster_movie_1.jpg', sysdate );
insert into movie_photo values ( movie_photo_seq.nextval, 12, '영화 포스터', 'poster_movie_1.jpg', sysdate );
insert into movie_photo values ( movie_photo_seq.nextval, 13, '영화 포스터', 'poster_movie_1.jpg', sysdate );

---------------------------------------------

-- store 상품구매 테이블
create table product_pay(
	product_pay_code int not null,			--상품결제코드
	pay_id varchar(30) not null,		    --결제ID (fk)
	product_code int not null,			    --상품코드 (fk)
	buy_phone varchar2(11) not null,	 	--구매자 연락처
	gift_phone1	varchar2(11) not null,		--선물 연착처1
	gift_phone2	varchar2(11),			    --선물 연착처2
	gift_phone3	varchar2(11),		       	--선물 연착처3
	pay_type varchar2(15) not null,		 	--결제분류
	pay_time  date,						    --결제날자
	pay_cancle_able char(1) not null,	  	--결제취소여부
	order_num1 number not null,			    --주문수량1
  order_num2 number,		          	  	--주문수량2
  order_num3 number			              	--주문수량3
);

create sequence pay_seq nocache nocycle;	--(상품결제코드)시퀸스

alter table product_pay add foreign key(pay_id) references member(member_id);			    --결제ID (fk)
alter table product_pay add foreign key(product_code) references product(product_code);		--상품코드 (fk)

---------------------------------------------

-------------------------------------------------------------  (3)

--평가좋아요 테이블 생성
create table evaluat_like(
  evaluat_like_code int,
  evaluat_code int,
  like_id varchar(30),
  constraint evaluat_like_evaluat_code_fk foreign key(evaluat_code) references evaluat(evaluat_code),
  constraint evaluat_like_like_id_fk foreign key(like_id) references member(member_id),
  primary key(evaluat_like_code)
);

--평가좋아요 시퀀스 생성
create sequence evaluat_like_seq
start with 1
increment by 1
nocache
nomaxvalue;


--답변 테이블 생성
create table answer(
  answer_code int,
  inquiry_code int UNIQUE,
  admin_id varchar(30),
  member_id varchar(30),
  answer_title varchar(255) not null,
  answer_content varchar(2048) not null,
  answer_date date default sysdate,
  CONSTRAINT fk_admin_id FOREIGN KEY (admin_id) REFERENCES admin(admin_id),
  CONSTRAINT fk_member_id FOREIGN KEY (member_id) REFERENCES member(member_id),
  CONSTRAINT fk_inquiry_code FOREIGN KEY (inquiry_code) REFERENCES inquiry(inquiry_code),
  primary key(answer_code)
);

--답변 시퀀스 생성
create sequence answer_code_seq nocycle nocache;
---------------------------------------------

--좌석 테이블
create table seat(
  show_place_code int not null,
  seat_type_code int not null,
  x_index number not null,
  y_index varchar(1) not null,
  primary key(x_index, y_index, show_place_code),
  FOREIGN KEY (show_place_code) REFERENCES show_place(show_place_code),
  FOREIGN KEY (seat_type_code) REFERENCES seat_type(seat_type_code)
);

insert into seat values( 1, 0, 2, '!');
insert into seat values( 1, 0, 5, '!');
insert into seat values( 1, 2, 1, 'A');
insert into seat values( 1, 2, 2, 'A');
insert into seat values( 1, 2, 3, 'A');
insert into seat values( 1, 2, 4, 'A');
insert into seat values( 1, 2, 5, 'A');
insert into seat values( 1, 2, 6, 'A');
insert into seat values( 1, 2, 7, 'A');
insert into seat values( 1, 2, 1, 'B');
insert into seat values( 1, 2, 2, 'B');
insert into seat values( 1, 2, 3, 'B');
insert into seat values( 1, 2, 4, 'B');
insert into seat values( 1, 2, 5, 'B');
insert into seat values( 1, 2, 6, 'B');
insert into seat values( 1, 2, 7, 'B');
insert into seat values( 1, 2, 1, 'C');
insert into seat values( 1, 2, 2, 'C');
insert into seat values( 1, 2, 3, 'C');
insert into seat values( 1, 2, 4, 'C');
insert into seat values( 1, 2, 5, 'C');
insert into seat values( 1, 2, 6, 'C');
insert into seat values( 1, 2, 7, 'C');
insert into seat values( 1, 2, 1, 'D');
insert into seat values( 1, 2, 2, 'D');
insert into seat values( 1, 2, 3, 'D');
insert into seat values( 1, 2, 4, 'D');
insert into seat values( 1, 2, 5, 'D');
insert into seat values( 1, 2, 6, 'D');
insert into seat values( 1, 2, 7, 'D');
insert into seat values( 1, 2, 1, 'E');
insert into seat values( 1, 2, 2, 'E');
insert into seat values( 1, 2, 3, 'E');
insert into seat values( 1, 2, 4, 'E');
insert into seat values( 1, 2, 5, 'E');
insert into seat values( 1, 2, 6, 'E');
insert into seat values( 1, 2, 7, 'E');

insert into seat values( 2, 0, 1, '!');
insert into seat values( 2, 0, 3, '!');
insert into seat values( 2, 2, 1, 'A');
insert into seat values( 2, 2, 2, 'A');
insert into seat values( 2, 2, 3, 'A');
insert into seat values( 2, 2, 4, 'A');
insert into seat values( 2, 2, 1, 'B');
insert into seat values( 2, 2, 2, 'B');
insert into seat values( 2, 2, 3, 'B');
insert into seat values( 2, 2, 4, 'B');
insert into seat values( 2, 3, 1, 'C');
insert into seat values( 2, 3, 2, 'C');
insert into seat values( 2, 3, 3, 'C');
insert into seat values( 2, 3, 4, 'C');
insert into seat values( 2, 2, 1, 'D');
insert into seat values( 2, 2, 2, 'D');
insert into seat values( 2, 2, 3, 'D');
insert into seat values( 2, 2, 4, 'D');

insert into seat values( 3, 0, 2, '!');
insert into seat values( 3, 2, 1, 'A');
insert into seat values( 3, 2, 2, 'A');
insert into seat values( 3, 2, 3, 'A');
insert into seat values( 3, 2, 4, 'A');
insert into seat values( 3, 2, 1, 'B');
insert into seat values( 3, 2, 2, 'B');
insert into seat values( 3, 2, 3, 'B');
insert into seat values( 3, 2, 4, 'B');
insert into seat values( 3, 3, 1, 'C');
insert into seat values( 3, 3, 2, 'C');
insert into seat values( 3, 3, 3, 'C');
insert into seat values( 3, 3, 4, 'C');
insert into seat values( 3, 2, 1, 'D');
insert into seat values( 3, 2, 2, 'D');
insert into seat values( 3, 2, 3, 'D');
insert into seat values( 3, 2, 4, 'D');
insert into seat values( 3, 2, 1, 'E');
insert into seat values( 3, 2, 2, 'E');
insert into seat values( 3, 2, 3, 'E');
insert into seat values( 3, 2, 4, 'E');

insert into seat values( 4, 0, 2, '!');
insert into seat values( 4, 2, 1, 'A');
insert into seat values( 4, 2, 2, 'A');
insert into seat values( 4, 2, 3, 'A');
insert into seat values( 4, 2, 4, 'A');
insert into seat values( 4, 2, 1, 'B');
insert into seat values( 4, 2, 2, 'B');
insert into seat values( 4, 2, 3, 'B');
insert into seat values( 4, 2, 4, 'B');
insert into seat values( 4, 3, 1, 'C');
insert into seat values( 4, 3, 2, 'C');
insert into seat values( 4, 3, 3, 'C');
insert into seat values( 4, 3, 4, 'C');
insert into seat values( 4, 2, 1, 'D');
insert into seat values( 4, 2, 2, 'D');
insert into seat values( 4, 2, 3, 'D');
insert into seat values( 4, 2, 4, 'D');

insert into seat values( 5, 0, 1, '!');
insert into seat values( 5, 0, 3, '!');
insert into seat values( 5, 2, 1, 'A');
insert into seat values( 5, 2, 2, 'A');
insert into seat values( 5, 2, 3, 'A');
insert into seat values( 5, 2, 4, 'A');
insert into seat values( 5, 3, 1, 'B');
insert into seat values( 5, 3, 2, 'B');
insert into seat values( 5, 3, 3, 'B');
insert into seat values( 5, 3, 4, 'B');
insert into seat values( 5, 3, 1, 'C');
insert into seat values( 5, 3, 2, 'C');
insert into seat values( 5, 3, 3, 'C');
insert into seat values( 5, 3, 4, 'C');
insert into seat values( 5, 2, 1, 'D');
insert into seat values( 5, 2, 2, 'D');
insert into seat values( 5, 2, 3, 'D');
insert into seat values( 5, 2, 4, 'D');

insert into seat values( 6, 0, 1, '!');
insert into seat values( 6, 0, 2, '!');
insert into seat values( 6, 2, 1, 'A');
insert into seat values( 6, 2, 2, 'A');
insert into seat values( 6, 2, 3, 'A');
insert into seat values( 6, 2, 1, 'B');
insert into seat values( 6, 2, 2, 'B');
insert into seat values( 6, 2, 3, 'B');
insert into seat values( 6, 3, 1, 'C');
insert into seat values( 6, 3, 2, 'C');
insert into seat values( 6, 3, 3, 'C');

--------------------------------------------------

-- 상영현황 
create table show_present(
  show_present_code int,
  show_place_code int,
  movie_code int,
  show_date date not null,
  show_time int not null,
  show_minute int not null,
  primary key(show_present_code),
  FOREIGN KEY (show_place_code) REFERENCES show_place(show_place_code),
  FOREIGN KEY (movie_code) REFERENCES movie(movie_code)  
);


create sequence show_present_seq
start with 1
increment by 1
nocache
nomaxvalue;

insert into show_present values(
  show_present_seq.nextval, 6, 1, SYSDATE , 5, 7
);


-------------------------------------------------------------  (4)
-- 회원 예매
create table member_reserve(
  reserve_code int,
  reserve_id varchar(30),
  show_present_code int,
  member_seat1 varchar(20) not null,
  member_seat2 varchar(20),
  member_seat3 varchar(20),
  member_seat4 varchar(20),
  member_seat5 varchar(20),
  member_seat6 varchar(20),
  member_seat7 varchar(20),
  member_seat8 varchar(20),
  reserve_cost number not null,
  reserve_date date not null,
  reserve_cancel_able char(1),
  primary key(reserve_code),
  FOREIGN KEY (reserve_id) REFERENCES member(member_id),
  FOREIGN KEY (show_present_code) REFERENCES show_present(show_present_code)
);

create sequence member_reserve_seq
start with 1
increment by 1
nocache
nomaxvalue;

insert into member_reserve values(
  member_reserve_seq.nextval, 'aaa', 1, 'A-1', 'H-5', null, null, null, null, null, null, 20000, sysdate, 'n'
); 
insert into member_reserve values(
  member_reserve_seq.nextval, 'aaa', 1, 'B-3', null, null, null, null, null, null, null, 20000, sysdate, 'n'
); 

-------------------------------------------------------

-- 비회원 예매
create table nonmember_reserve(
  nonmember_reserve_code int,
  nonmember_code int,
  show_present_code int,
  nonmember_seat1 varchar(20) not null,
  nonmember_seat2 varchar(20),
  nonmember_seat3 varchar(20),
  nonmember_seat4 varchar(20),
  nonmember_seat5 varchar(20),
  nonmember_seat6 varchar(20),
  nonmember_seat7 varchar(20),
  nonmember_seat8 varchar(20),
  nonmember_reserve_cost number not null,
  nonmember_reserve_date date not null,
  nonmember_reserve_cancel_able char(1),
  primary key(nonmember_reserve_code),
  FOREIGN KEY (nonmember_code) REFERENCES nonmember(nonmember_code),
  FOREIGN KEY (show_present_code) REFERENCES show_present(show_present_code)
);


create sequence nonmember_reserve_seq
start with 1
increment by 1
nocache
nomaxvalue;




-------------------------------------------------------------  (5)

-- 영화 포스터 뷰
create view movie_poster as 
  SELECT movie_code, movie_photo_addr  FROM movie_photo 
  WHERE movie_photo_code IN (
      SELECT max(movie_photo_code) movie_photo_code FROM movie_photo 
      where movie_photo_addr like 'poster_' || '%' GROUP BY movie_code
      );
      
-- 상영정보 뷰 : 상영현황 + 영화 + 상영관
create view show_all as 
    SELECT * FROM show_place join (
        SELECT * FROM show_present join movie USING (movie_code)
        ) tt USING (show_place_code);
          
          
-- 상영상세정보 뷰 : 상영정보 + 영화관 이름 + 포스터
create view show_fully as 
      SELECT * FROM theater join (
          SELECT * FROM show_all join movie_poster USING (movie_code)
          ) tt USING (theater_code);


-- 예약 좌석 뷰
create view reserved_seat as 
SELECT show_present_code, sum(reserved_num) AS reserve_num 
		FROM ( SELECT show_present_code, ( NVL2(nonmember_seat1, 1, 0) + NVL2(nonmember_seat2, 1, 0) + NVL2(nonmember_seat3, 1, 0) + NVL2(nonmember_seat4, 1, 0) + NVL2(nonmember_seat5, 1, 0) + NVL2(nonmember_seat6, 1, 0) + NVL2(nonmember_seat7, 1, 0) + NVL2(nonmember_seat8, 1, 0) ) as reserved_num 
				FROM nonmember_reserve
				WHERE nonmember_reserve_cancel_able != 'Y'
				UNION ALL
				SELECT show_present_code, ( NVL2(member_seat1, 1, 0) + NVL2(member_seat2, 1, 0) + NVL2(member_seat3, 1, 0) + NVL2(member_seat4, 1, 0) + NVL2(member_seat5, 1, 0) + NVL2(member_seat6, 1, 0) + NVL2(member_seat7, 1, 0) + NVL2(member_seat8, 1, 0) ) as reserved_num 
				FROM member_reserve 
				WHERE reserve_cancel_able != 'Y')
		GROUP BY show_present_code ;

